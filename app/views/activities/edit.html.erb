<h1>Редактирование экскурсии</h1>
<% flash.each do |key, value| %>
  <div class="alert alert-<%= key %>"><%= value %></div>
<% end %>
<div class="row">
  <div class="col-md-4">
    <div id="activity_edit_form">
      <%= form_for @activity, :remote => true do |f| %>

        <div class="form-group">
          <%= f.label :title, "Название" %>
          <input v-on:blur="onBlur_title" v-model="activity_title" value="<%= @activity.title %>" id="activity_title" type="text" class="form-group form-control" name="activity[title]" placeholder="Введите название">

          <%= f.label :price, "Цена" %>
          <input v-on:blur="onBlur_price" v-model="activity_price" value="<%= @activity.price %>" id="activity_price" type="text" class="form-group form-control" name="activity[price]" placeholder="Введите название">

          <%= f.label :city, "Город" %>
          <input v-on:blur="onBlur_city" v-model="activity_city" value="<%= @activity.city %>" id="activity_city" type="text" class="form-group form-control" name="activity[city]" placeholder="Введите название">

          <%= f.submit "Сохранить изменения", class: "btn btn-primary" do %>
            <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>
          <% end %>
        </div>
      <% end %>
    </div>


    <h4>Указание даты и времени</h4>
    <div class="well" id="event_form">
      <%= render 'events/event_form' %>
    </div>
  </div>


  <h4>Логи</h4>
  <div class="col-md-6 logs" v-model="LogsHTML" id="logs_window" v-on="change:onChange">
    <%= raw @activity.logs %>
  </div>

</div>


<script>
    var app1 = new Vue({
        el: '#activity_edit_form',
        data: {
            old_activity_title: activity_title.value,
            activity_title: '<%= @activity.title %>',
            old_activity_price: activity_price.value,
            activity_price: '<%= @activity.price %>',
            old_activity_city: activity_city.value,
            activity_city: '<%= @activity.city %>',
            result_logs: function () {
                return document.getElementById('logs_window').innerHTML;
            },
            PrintLogs: function (activity_atribut, OldData, NewData) {
                switch (activity_atribut) {
                    case 'title':
                        $('.logs').prepend("<p>Дата и время: " + (new Date()).toString('dd.MM.yyyy Время: hh:mm:ss') + "</p><p>Старое значение названия: " + OldData + "</p>" + "<p>Новое значение названия: " + NewData);
                        this.old_activity_title = this.activity_title;
                        break;
                    case 'price':
                        $('.logs').prepend("<p>Дата и время: " + (new Date()).toString('dd.MM.yyyy Время: hh:mm:ss') + "</p><p>Старое значение цены: " + OldData + "</p>" + "<p>Новое значение цены: " + NewData);
                        this.old_activity_price = this.activity_price;
                        break;
                    case 'city':
                        $('.logs').prepend("<p>Дата и время: " + (new Date()).toString('dd.MM.yyyy Время: hh:mm:ss') + "</p><p>Старое значение города: " + OldData + "</p>" + "<p>Новое значение города: " + NewData);
                        this.old_activity_city = this.activity_city;
                        break;
                    default:
                        $('.logs').prepend("<p>Дата и время: " + (new Date()).toString('dd.MM.yyyy Время: hh:mm:ss') + "</p><p>Старое значение атрибута: " + OldData + "</p>" + "<p>Новое значение атрибута: " + NewData);
                        this.old_activity_title = this.activity_title;
                        this.old_activity_price = this.activity_price;
                        this.old_activity_city = this.activity_city;
                        break;
                }
            }
        },
        methods: {
            onBlur_title: function () {
                var OldData = this.old_activity_title;
                var NewData = this.activity_title;
                var Logs = this.PrintLogs('title', OldData, NewData);
                var SendData1 = this.SendData(OldData, NewData);
            },
            onBlur_price: function () {
                var OldData = this.old_activity_price;
                var NewData = this.activity_price;
                var Logs = this.PrintLogs('price', OldData, NewData);
                var SendData1 = this.SendData(OldData, NewData);
            }, //todo доделать функцию на примере предыдущей
            onBlur_city: function () {
                var OldData = this.old_activity_city;
                var NewData = this.activity_city;
                var Logs = this.PrintLogs('city', OldData, NewData);
                var SendData1 = this.SendData(OldData, NewData);
            },
            SendData: function (old_activity_atribut, new_activity_atribut) {
                $.ajax({
                    type: "PATCH",
                    headers: {
                        'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content'),
                        'Content-Type': 'application/json; charset=utf-8'
                    },
                    dataType: "json",
                    url: '/activities/' + <%= params[:id] %>,
                    data:
                        JSON.stringify({
                            activity: {
                                'title': this.activity_title,
                                'price': this.activity_price,
                                'logs': this.result_logs(),
                                'city': this.activity_city
                            }
                        }),
                    //success: this.update_atribut(old_activity_atribut,new_activity_atribut),
                    //error: this.update_atribut(old_activity_atribut,new_activity_atribut)
                });
            }
        }
    })
</script>